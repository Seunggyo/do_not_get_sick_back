import { PaymentParamsWithoutUrl, PaymentParamsWithUrl } from '@tosspayments/brandpay-types';
declare type PickMethod = 'orderId' | 'orderName' | 'successUrl' | 'failUrl' | 'customerEmail' | 'taxFreeAmount';
export declare type BrandpayPaymentParamsWithUrl = Pick<PaymentParamsWithUrl, PickMethod>;
export declare type BrandpayPaymentParamsWithoutUrl = Pick<PaymentParamsWithoutUrl, PickMethod>;
export declare type BrandpayPaymentParams = BrandpayPaymentParamsWithUrl | BrandpayPaymentParamsWithoutUrl;
export declare class BrandpayPaymentState {
    orderId: BrandpayPaymentParams['orderId'];
    orderName: BrandpayPaymentParams['orderName'];
    successUrl: BrandpayPaymentParams['successUrl'];
    failUrl: BrandpayPaymentParams['failUrl'];
    customerEmail: BrandpayPaymentParams['customerEmail'];
    taxFreeAmount: BrandpayPaymentParams['taxFreeAmount'];
    constructor({ orderId, orderName, customerEmail, failUrl, successUrl, taxFreeAmount, }: BrandpayPaymentParams);
    getParams(): BrandpayPaymentParams;
}
export declare function isBrandpayRequestPaymentParamsWithUrl(params: BrandpayPaymentParamsWithUrl | BrandpayPaymentParamsWithoutUrl): params is BrandpayPaymentParamsWithUrl;
export {};
